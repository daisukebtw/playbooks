---
- name: 
  hosts: all
  become: true
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml

  tasks:
    - name: Enable cgroups
      replace:
        path: /etc/default/grub
        regexp: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet splash"'
        replace: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet splash cgroup_enable=memory cgroup_memory=1"'
      notify: Restart grub

    - name: Install required packages
      apt:
        name:
          - curl
          - wget
          - git
          - nano
          - iptables
          - python3-pip
        state: present

    - name: Pip package Install
      pip:
        name:
          - pyyaml
          - kubernetes
          - openshift
    
    - name: Disable swap
      ansible.posix.mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      loop: [ "none", "swap" ]

    - name: Configure IPTables
      command: "{{ item }}"
      with_items:
        - iptables -F
        - update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
        - update-alternatives --set iptables /usr/sbin/iptables-legacy

    - name: Check for K3s state
      shell: k3s --version
      register: k3s_state
      ignore_errors: true

    - name: K3s Install on k3s-prod-1
      shell: curl -sfL https://get.k3s.io | K3S_TOKEN=LEERJV2eoRiz sh -s - server --cluster-init --disable=servicelb --disable=traefik
      when: k3s_state.failed
      delegate_to: k3s-prod-1

    - name: K3s Install on k3s-prod-2
      shell: curl -sfL https://get.k3s.io | K3S_TOKEN=LEERJV2eoRiz sh -s - server --server https://10.10.30.21:6443 --disable=servicelb --disable=traefik
      when: k3s_state.failed
      delegate_to: k3s-prod-2

    - name: Check for helm state
      shell: helm version
      register: helm_state
      ignore_errors: true
      delegate_to: k3s-prod-1

    - name: Install Helm
      uri:
        url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        dest: /root/get_helm.sh
        mode: '0700'
      delegate_to: k3s-prod-1
      when: helm_state.failed

    - name: Run Helm install script
      command: /root/get_helm.sh
      delegate_to: k3s-prod-1
      when: helm_state.failed

    - name: Create MetalLB namespace
      kubernetes.core.k8s:
        name: metallb-system
        api_version: v1
        kind: Namespace
        state: present
      delegate_to: k3s-prod-1

    - name: Create ArgoCD namespace
      kubernetes.core.k8s:
        name: argocd
        api_version: v1
        kind: Namespace
        state: present
      delegate_to: k3s-prod-1

    - name: Install MetalLB
      command: "{{ item }}"
      with_items:
        - kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.14.9/config/manifests/metallb-native.yaml
        - kubectl apply -f https://raw.githubusercontent.com/daisukebtw/homelab/refs/heads/main/kubernetes/metallb/advertisement.yml
        - kubectl apply -f https://raw.githubusercontent.com/daisukebtw/homelab/refs/heads/main/kubernetes/metallb/pool.yml

    - name: Install ArgoCD
      command: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

    - name: Patch ArgoCD service to LoadBalancer
      command: 'kubectl patch svc argocd-server -n argocd -p "{\"spec\": {\"type\": \"LoadBalancer\"}}"'

    - name: Get ArgoCD password
      shell: kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
      register: argocd_password

    - name: Display ArgoCD password
      debug:
        msg: "{{ argocd_password.stdout }}"

  handlers:
    - name: Restart grub
      command: update-grub